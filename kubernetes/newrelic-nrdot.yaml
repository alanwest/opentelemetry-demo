---
# Source: opentelemetry-demo/charts/opentelemetry-collector/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: opentelemetry-demo-nrotelcol
  namespace: otel-demo
  labels:
    app.kubernetes.io/name: nrotelcol
    app.kubernetes.io/instance: opentelemetry-demo
    app.kubernetes.io/version: "0.0.1"
---
# Source: opentelemetry-demo/charts/opentelemetry-collector/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: opentelemetry-demo-nrotelcol
  namespace: otel-demo
  labels:
    app.kubernetes.io/name: nrotelcol
    app.kubernetes.io/instance: opentelemetry-demo
    app.kubernetes.io/version: "0.0.1"
data:
  relay: |
    connectors:
      newrelicapm:
      newrelicapm/metrics:
    exporters:
      logging: {}
      otlp:
        endpoint: $NEW_RELIC_OTLP_ENDPOINT
        headers:
          api-key: $NEW_RELIC_API_KEY_NRDOT
    extensions:
      health_check: {}
      memory_ballast:
        size_in_percentage: 40
    processors:
      newrelicapm: {}
      batch: {}
      memory_limiter:
        check_interval: 5s
        limit_percentage: 80
        spike_limit_percentage: 25
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: ${env:MY_POD_IP}:4317
          http:
            endpoint: ${env:MY_POD_IP}:4318
    service:
      extensions:
      - health_check
      - memory_ballast
      pipelines:
        traces:
          receivers: [otlp]
          processors: [memory_limiter, newrelicapm, batch]
          exporters: [logging, newrelicapm, otlp]
        metrics:
          receivers: [otlp, newrelicapm]
          processors: [memory_limiter, newrelicapm, batch]
          exporters: [logging, otlp, newrelicapm/metrics]
        metrics/apm:
          receivers: [newrelicapm/metrics]
          processors: [memory_limiter, batch]
          exporters: [otlp]
        logs:
          receivers: [otlp, newrelicapm]
          processors: [memory_limiter, batch]
          exporters: [logging, otlp]
      telemetry:
        metrics:
          address: ${env:MY_POD_IP}:8888
---
# Source: opentelemetry-demo/charts/opentelemetry-collector/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: opentelemetry-demo-nrotelcol
  labels:
    app.kubernetes.io/name: nrotelcol
    app.kubernetes.io/instance: opentelemetry-demo
    app.kubernetes.io/version: "0.0.1"
rules:
  - apiGroups: [""]
    resources: ["pods", "namespaces"]
    verbs: ["get", "watch", "list"]
  - apiGroups: ["apps"]
    resources: ["replicasets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["extensions"]
    resources: ["replicasets"]
    verbs: ["get", "list", "watch"]
---
# Source: opentelemetry-demo/charts/opentelemetry-collector/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: opentelemetry-demo-nrotelcol
  labels:
    app.kubernetes.io/name: nrotelcol
    app.kubernetes.io/instance: opentelemetry-demo
    app.kubernetes.io/version: "0.0.1"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: opentelemetry-demo-nrotelcol
subjects:
- kind: ServiceAccount
  name: opentelemetry-demo-nrotelcol
  namespace: otel-demo
---
# Source: opentelemetry-demo/charts/opentelemetry-collector/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: opentelemetry-demo-nrotelcol
  namespace: otel-demo
  labels:
    app.kubernetes.io/name: nrotelcol
    app.kubernetes.io/instance: opentelemetry-demo
    app.kubernetes.io/version: "0.0.1"
    component: standalone-collector
spec:
  type: ClusterIP
  ports:
    
    - name: metrics
      port: 8888
      targetPort: 8888
      protocol: TCP
    - name: otlp
      port: 4317
      targetPort: 4317
      protocol: TCP
      appProtocol: grpc
    - name: otlp-http
      port: 4318
      targetPort: 4318
      protocol: TCP
  selector:
    app.kubernetes.io/name: nrotelcol
    app.kubernetes.io/instance: opentelemetry-demo
    component: standalone-collector
  internalTrafficPolicy: Cluster
---
# Source: opentelemetry-demo/charts/opentelemetry-collector/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opentelemetry-demo-nrotelcol
  namespace: otel-demo
  labels:
    app.kubernetes.io/name: nrotelcol
    app.kubernetes.io/instance: opentelemetry-demo
    app.kubernetes.io/version: "0.0.1"
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: nrotelcol
      app.kubernetes.io/instance: opentelemetry-demo
      component: standalone-collector
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        opentelemetry_community_demo: "true"
      labels:
        app.kubernetes.io/name: nrotelcol
        app.kubernetes.io/instance: opentelemetry-demo
        component: standalone-collector
        
    spec:
      
      serviceAccountName: opentelemetry-demo-nrotelcol
      securityContext:
        {}
      containers:
        - name: opentelemetry-collector
          command:
            - /nrdot
            - --config=/conf/relay.yaml
          securityContext:
            {}
          image: "us-docker.pkg.dev/$PROJECT_ID/gcr.io/demo:$DEMO_VERSION-nrdot"
          imagePullPolicy: Always
          ports:
            
            - name: metrics
              containerPort: 8888
              protocol: TCP
            - name: otlp
              containerPort: 4317
              protocol: TCP
            - name: otlp-http
              containerPort: 4318
              protocol: TCP
          env:
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
          livenessProbe:
            httpGet:
              path: /
              port: 13133
          readinessProbe:
            httpGet:
              path: /
              port: 13133
          resources:
            limits:
              memory: 200Mi
          volumeMounts:
            - mountPath: /conf
              name: opentelemetry-collector-configmap
      volumes:
        - name: opentelemetry-collector-configmap
          configMap:
            name: opentelemetry-demo-nrotelcol
            items:
              - key: relay
                path: relay.yaml
      hostNetwork: false
---
